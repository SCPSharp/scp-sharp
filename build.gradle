import org.jetbrains.kotlin.gradle.dsl.JvmTarget

import java.nio.charset.StandardCharsets

plugins {
    id 'fabric-loom' version '1.3-SNAPSHOT'
    id 'org.jetbrains.kotlin.jvm' version '1.9.0'
    id 'net.kyori.indra' version '3.1.3'
    id 'net.kyori.indra.licenser.spotless' version '3.1.2'
    id 'net.kyori.indra.git' version '3.1.3'
    id 'com.modrinth.minotaur' version '2.8.4'
    id 'maven-publish'
}

group 'scpsharp'
version '1.13.0'
String fullVersion = "mc${project.minecraft_version}-$project.version"

repositories {
    mavenCentral()
    maven { url 'https://maven.terraformersmc.com/releases/' } // modmenu
    maven { url 'https://maven.shedaniel.me' } // REI
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation 'net.fabricmc:fabric-language-kotlin:1.10.8+kotlin.1.9.0'

    modImplementation 'com.terraformersmc:modmenu:9.0.0'
    modCompileOnly 'me.shedaniel:RoughlyEnoughItems-api-fabric:14.0.688'
    modRuntimeOnly 'me.shedaniel:RoughlyEnoughItems-fabric:14.0.688'
    // https://github.com/shedaniel/RoughlyEnoughItems/issues/1559
    modCompileOnly "me.shedaniel.cloth:cloth-config:13.0.121"
//    modRuntimeOnly 'dev.architectury:architectury-fabric:9.1.10' // for REI
}

indra {
    github 'SCPSharp', 'scp-sharp'
    javaVersions {
        target 17
    }
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

compileKotlin {
    compilerOptions.jvmTarget.set(JvmTarget.JVM_17)
}

loom {
    accessWidenerPath.set file("src/main/resources/scp-sharp.accesswidener")
}

processResources {
    if(indraGit.describe() != null) {
        inputs.property 'gitVersion', indraGit.describe()
    }
    inputs.property 'projectVersion', project.version

    filesMatching('fabric.mod.json') {
        expand 'version': project.version,
                'fullVersion': "${indraGit.describe()}-$project.version"
    }
}

jar {
    from('LICENSE') {
        rename { "${it}_${project.name}" }
    }
    indraGit.applyVcsInformationToManifest(manifest)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        mavenLocal()
    }
}

afterEvaluate {
    tasks.modrinth {
        onlyIf {
            System.getenv('MODRINTH_TOKEN') != null
        }
        dependsOn remapJar
    }
}

modrinth {
    projectId = 'p3O2a1Bc'
    versionNumber = fullVersion
    versionName = fullVersion
    if(indraGit.headTag() == null) {
        changelog = "See git for changelog. ${indraGit.describe()}"
    } else {
        changelog = "See [GitHub](https://github.com/SCPSharp/scp-sharp/releases/tag/${indraGit.headTag().name}) for changelog. ${indraGit.describe()}"
    }

    uploadFile = remapJar

    gameVersions = [ project.minecraft_version ]
    dependencies = []

    syncBodyFrom = new String(rootProject.file('README.md').readBytes(), StandardCharsets.UTF_8)
}

tasks.modrinth.dependsOn(tasks.modrinthSyncBody)
